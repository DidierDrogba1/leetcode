# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxPathSum(self, root: TreeNode) -> int:
        self.max_sum = float('-inf')

        if not root:
            return 0 
        self.cal_sum(root)

        return self.max_sum


    def cal_sum(self, node):
        if not node:
            return 0 
        
        left_sub_height = self.cal_sum(node.left)
        right_sub_height = self.cal_sum(node.right)

        self.max_sum = max(self.max_sum, node.val + left_sub_height + right_sub_height)
        cur_path_sum = node.val + max(left_sub_height, right_sub_height)

        return cur_path_sum if cur_path_sum > 0 else 0